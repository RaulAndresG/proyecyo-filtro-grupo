import React, { useState, useEffect } from "react";
import Modal from "./Modal"; // Asegúrate de que la ruta sea correcta
import burguer from '../Img/burguer.png';
import './pagina.css';
import './modal.css'; 

const Panel = () => {
  const [modalIsOpen, setModalIsOpen] = useState(false);
  const [selectedItem, setSelectedItem] = useState(null);
  const [loading, setLoading] = useState(true);
  const [data, setData] = useState([]);

  useEffect(() => {
    // Realiza una solicitud a la API para obtener los datos
    fetch('http://localhost:7777/api/Indicadores')
      .then(response => response.json())
      .then(data => {
        setData(data);
        setLoading(false);
      })
      .catch(error => {
        console.error("Error al obtener los datos:", error);
        setLoading(false);
      });
  }, []);

  // Función para obtener el color del círculo según el cumplimiento
  const getCircleColor = (cumplimiento) => {
    if (cumplimiento >= 80) {
      return 'green';
    } else if (cumplimiento >= 60) {
      return 'orange';
    } else {
      return 'red';
    }
  };

  // Función para calcular el porcentaje de llenado del círculo
  const calculateCirclePercentage = (cumplimiento) => {
    return (cumplimiento / 100) * 85; // Ajusta el valor según tu preferencia
  };

  return (
    <div className="app">
      <div>
        <h1 className="pagina">Panel de Indicadores</h1>
        <p className="paginas">Aquí puedes visualizar los indicadores propuestos y añadidos por tu equipo de trabajo. Si quieres ver más detalles, dale click a uno de ellos para más información</p>
      </div>
      <div className="tabla-container">
        <table className="tabla">
          <thead>
            <tr>
              <th colSpan={9} className="titulo-container">
                <div className="titulo1">Indicador</div>
                <div className="titulo2">Descripcion</div>
                <div className="titulo3">Categoria</div>
                <div className="titulo4">Fecha de Inicio</div>
                <div className="titulo5">Fecha de Terminacion</div>
                <div className="titulo6">Formula</div>
                <div className="titulo7">Frecuencia</div>
                <div className="titulo8">Cumplimiento</div>
                <div className="titulo9">Area</div>
              </th>
            </tr>
          </thead>
          <tbody>
            {data.map((item) => (
              <tr
                key={item._id}
                className="rectangulo"
                onClick={() => handleRowClick(item)} 
                style={{ cursor: "pointer" }} 
              >
                <td colSpan={9}>
                  <div className="informacion">
                    <div className="info1">{item.indicador}</div>
                    <div className="info2">{item.descripcion}</div>
                    <div className="info3">{item.categoria}</div>
                    <div className="info4">{item.fecha_inicio}</div>
                    <div className="info5">{item.fecha_terminacion}</div>
                    <div className="info6">{item.formula}</div>
                    <div className="info7">{item.frecuencia}</div>
                    <div className="circle-loader">
                      <svg width="60" height="60">
                        <circle
                          className="circle"
                          cx="30"
                          cy="30"
                          r="27"
                          stroke={getCircleColor(item.cumplimiento)}
                          strokeWidth="7"
                          fill="none"
                          strokeDasharray="251"
                          strokeDashoffset={calculateCirclePercentage(item.cumplimiento)}
                        />
                        <text x="30" y="30" textAnchor="middle" dy="0.3em" className="percentage">
                          {item.cumplimiento}%
                        </text>
                      </svg>
                    </div>
                    <div className="info9">{item.area}</div>
                    <img alt="" className="burguer" src={burguer} />
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
      {modalIsOpen && (
        <Modal item={selectedItem} onClose={() => setModalIsOpen(false)} />
      )}
    </div>
  );
};

export default Panel;
